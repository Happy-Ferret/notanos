{
  "name": "screen-buffer",
  "version": "0.4.0",
  "description": "A simple screen buffer component",
  "main": "index.js",
  "scripts": {
    "test": "mocha",
    "coveralls": "mocha --require blanket --reporter mocha-lcov-reporter | ./node_modules/coveralls/bin/coveralls.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/dtinth/screen-buffer.git"
  },
  "author": {
    "name": "Thai Pangsakulyanont",
    "email": "org.yi.dttvb@gmail.com"
  },
  "license": "MIT",
  "devDependencies": {
    "mocha": "~1.17.1",
    "coveralls": "~2.7.1",
    "blanket": "~1.1.6",
    "mocha-lcov-reporter": "0.0.1"
  },
  "config": {
    "blanket": {
      "pattern": [
        "screen-buffer.js",
        "diff.js",
        "patch.js"
      ]
    }
  },
  "readme": "ScreenBuffer [![ok, travis](https://travis-ci.org/dtinth/screen-buffer.png?branch=master)](https://travis-ci.org/dtinth/screen-buffer)\n============\n\nA ScreenBuffer represents a visible portion of a terminal in a screen.\nA ScreenBuffer contains a lot of cells.\nEach cell contains a character and attributes,\nsuch as color and boldness.\nIt also keeps track of cursor position.\n\n\n## Usage in Node.js\n\n```javascript\nvar ScreenBuffer = require('screen-buffer')\n```\n\n\n## Usage in Browser\n\n```html\n<script src=\"path/to/screen-buffer.js\"></script>\n<script src=\"path/to/diff.js\"></script><!-- if you need .diff -->\n<script src=\"path/to/patch.js\"></script><!-- if you need .patch -->\n```\n\n\n## Cell Attributes\n\nCurrently the attributes is a 21-bit integer. From MSB:\n\n * 1 bit - inverse video flag\n * 1 bit - underline flag\n * 1 bit - bold flag\n * 9 bits - foreground color (according to xterm-256)\n * 9 bits - background color (according to xterm-256)\n\nThere are two special values for colors:\n\n * 257 - default foreground color\n * 256 - default background color\n \n## API\n\n### ScreenBuffer.EMPTY_CELL\n\nAn empty cell: default background and foreground with space character.\n\n### ondirty : function(row) { }\n\nOverride this function to be notified when changes are made to the buffer.\n\n### cursorX : Number\n\nThe X position of the cursor (0 = leftmost)\n\n### cursorY : Number\n\nThe Y position of the cursor (0 = topmost)\n\n### update(y, [ [attr, char], [attr, char], ... ]) \n\nSet one line of data in the ScreenBuffer.\ny is the row in the screen and data array looks like this:\n    [ [attribute, character], ... ]\n\n### toString()\n\nReturns the string in the display buffer.\n\n### setCursor(x, y)\n\nSets the cursor position.\n\n### cursorX\n\nThe X position of the cursor.\n\n### cursorY\n\nThe Y position of the cursor.\n\n### getRows()\n\nReturns the number of rows in the buffer.\n\n### getCols(row)\n\nReturns the number of characters in this row.\n\n### setRows(rows)\n\nResizes the number of rows.\n\n### setCols(row, cols)\n\nResizes the number of columns in the specified row.\n\n### getCell(row, col)\n\nReturns the cell at (row, col).\nReturned value is in form of [ attributes, ch ].\n\n### setCell(row, col, cell)\n\nSets the cell at (row, col). A cell is in form of [ attributes, ch ].\n\n### resize(rows, cols)\n\nResizes the screen buffer.\n\n### clone()\n\nReturns a clone of the screen buffer.\n\n### getRow(row)\n\nReturns a row data array. _Don't modify it!_\n\n## ScreenBuffer Diff and Patch\n\nSometimes, you may want to stream the content of a screen buffer\nover the network.\n\nYou can use `ScreenBuffer.diff` and `ScreenBuffer.patch` for this.\n\nSuppose that you have two ScreenBuffer objects, `a` and `b`,\n\n```javascript\nvar operations = ScreenBuffer.diff(b, a)\n```\n\nThis will compute the operations that needs to be done on `b`\nto make its contents equal to `a`.\nThe returned result is an array of operations,\nwhich can be sent over the wire to another user.\n\nAt the other side,\nwhen they received the operations,\nthey can apply it to their own buffer like this:\n\n```javascript\nScreenBuffer.patch(b, operations)\n```\n\n\n### ScreenBuffer.diff(source, destination)\n\nComputes the list of operation _to be applied on the source_\nto make it match the target.\n\nA returned result will have this structure:\n\n```javascript\n[OPERATION, ...]\n```\n\nAn _OPERATION_ represents an operation:\n\n* `ROWS` (resize number of rows)\n* `[X, Y]` (set cursor position)\n* `[row, 0, COLUMNS]` (resize column)\n* `[row, 1, SOURCE ROW INDEX]` (copy)\n* `[row, column, \"TEXT\", \"COMPRESSED ATTRIBUTE,...\"]` (draw text)\n\nA _COMPRESSED ATTRIBUTE_ has the form:\n\n* `VALUE`\n* `VALUE*MULTIPLICITY`\n\n### ScreenBuffer.patch(screenbuffer, operations)\n\nApplies the operations from the diff array onto the screenbuffer.\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/dtinth/screen-buffer/issues"
  },
  "homepage": "https://github.com/dtinth/screen-buffer",
  "_id": "screen-buffer@0.4.0",
  "dist": {
    "shasum": "9e819b9110ac91f5da63d7acddfa87ce1f3ffd0e"
  },
  "_from": "screen-buffer@~0.4.0",
  "_resolved": "https://registry.npmjs.org/screen-buffer/-/screen-buffer-0.4.0.tgz"
}
